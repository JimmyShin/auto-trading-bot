name: pytest

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Fail fast if job stalls
    env:
      # Point baseline generator to bundled CSV fixtures so CI does not depend on data/backtest
      BASELINE_OHLCV_DIR: tests/data/ohlcv
    steps:
      - uses: actions/checkout@v4
        with:
          path: .

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run fast tests (exclude regression) with durations and timeouts
        working-directory: ${{ github.workspace }}
        run: |
          pytest -m "not regression" -vv -ra \
            --durations=15 --maxfail=1 \
            --timeout=120

      - name: Generate trade report artifacts
        working-directory: ${{ github.workspace }}
        run: |
          python reporting/report_metrics.py --input tests/data/ohlcv/sample.csv --output reporting/out

      - name: Evaluate Good-To-Go gate
        working-directory: ${{ github.workspace }}
        run: |
          python reporting/good_to_go_check.py --report reporting/out/report.json --config reporting/good_to_go_config.yaml

      - name: Prepare reporting artifacts
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p reporting/out/upload
          cp reporting/out/report.json reporting/out/upload/report.json
          cp reporting/out/good_to_go_result.json reporting/out/upload/good_to_go_result.json
          cp reporting/out/report.md reporting/out/upload/report.md
          cp reporting/out/report.csv reporting/out/upload/report.csv

      - name: Upload reporting artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trading-report
          path: |
            reporting/out/upload/report.json
            reporting/out/upload/good_to_go_result.json
            reporting/out/upload/report.md
            reporting/out/upload/report.csv
